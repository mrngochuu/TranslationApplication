/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import data.Node;
import data.Volcabulary;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Do Ngoc Huu
 */
public class TranslationApplication extends javax.swing.JFrame {

    // file name
    String fileVn = "Vn-en.txt";
    String fileEn = "En-vn.txt";
    Node nodeVn = null;
    Node nodeEn = null;

    Vector<String> headerVn;
    Vector<String> headerEn;
    Vector dataVn;
    Vector dataEn;
    Vector dataSeach;

    DefaultTableModel tblModel;

//    Vector
    /**
     * Creates new form TranslationApplication
     */
    public TranslationApplication() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        nodeVn = new Node();
        nodeEn = new Node();

        headerVn = new Vector<>();
        headerVn.add("Vietnamese");
        headerVn.add("English");

        headerEn = new Vector<>();
        headerEn.add("English");
        headerEn.add("Vietnamese");

        dataVn = new Vector();
        dataEn = new Vector();

        //load data
        loadDataIntoNode(fileVn, dataVn, nodeVn);
        loadDataIntoNode(fileEn, dataEn, nodeEn);

        rdbVnActionPerformed(null);
        //auto Save
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Thread.sleep(5000);
                        btnSaveToFileActionPerformed(null);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }
        }).start();
    }

    private void loadDataIntoNode(String fileName, Vector data, Node node) {
        File f = new File(fileName);

        try {
            f.createNewFile();
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            String S;
            while ((S = br.readLine()) != null) {
                S = S.trim();
                if (S.length() > 0) {
                    StringTokenizer stk1 = new StringTokenizer(S, ":");
                    String name = stk1.nextToken().trim();
                    //Create a volcabulary
                    Volcabulary newest = new Volcabulary(name);
                    //Add meaning into volcabulary linked list
                    String meaning = stk1.nextToken().trim();
                    if (meaning.contains(",")) {
                        StringTokenizer stk2 = new StringTokenizer(meaning, ",");
                        String mean;
                        while (stk2.hasMoreTokens()) {
                            mean = stk2.nextToken();
                            newest.addMeaning(mean);
                        }
                    } else {
                        newest.addMeaning(meaning);
                    }
                    node.addNewVolcabulary(newest);
                }
            }
            addNodeToVector(data, node);
            br.close();
            fr.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        rdbVn = new javax.swing.JRadioButton();
        rdbEn = new javax.swing.JRadioButton();
        panelVnEn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtVnWord = new javax.swing.JTextField();
        txtVnMeaning = new javax.swing.JTextField();
        btnVnAdd = new javax.swing.JButton();
        btnVnCancel = new javax.swing.JButton();
        panelEnVn = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEnWord = new javax.swing.JTextField();
        txtEnMeaning = new javax.swing.JTextField();
        btnEnAdd = new javax.swing.JButton();
        btnEnCancel = new javax.swing.JButton();
        btnSaveToFile = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vietnamese", "English"
            }
        ));
        tbl.setEnabled(false);
        jScrollPane1.setViewportView(tbl);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTitle.setText("Vietnamese - English");

        buttonGroup1.add(rdbVn);
        rdbVn.setSelected(true);
        rdbVn.setText("Vietnamese - English");
        rdbVn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbVnActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbEn);
        rdbEn.setText("English - Vietnamese");
        rdbEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEnActionPerformed(evt);
            }
        });

        panelVnEn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vietnamese - English", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel2.setText("Vietnamese:");

        jLabel3.setText("English:");

        btnVnAdd.setText("Add");
        btnVnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVnAddActionPerformed(evt);
            }
        });

        btnVnCancel.setText("Cancel");
        btnVnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelVnEnLayout = new javax.swing.GroupLayout(panelVnEn);
        panelVnEn.setLayout(panelVnEnLayout);
        panelVnEnLayout.setHorizontalGroup(
            panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVnEnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelVnEnLayout.createSequentialGroup()
                        .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtVnMeaning, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(txtVnWord)))
                    .addGroup(panelVnEnLayout.createSequentialGroup()
                        .addComponent(btnVnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelVnEnLayout.setVerticalGroup(
            panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVnEnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtVnWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtVnMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelVnEnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVnAdd)
                    .addComponent(btnVnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelEnVn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "English - Vietnamese", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel4.setText("English:");

        jLabel5.setText("Vietnamese:");

        txtEnWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnWordActionPerformed(evt);
            }
        });

        btnEnAdd.setText("Add");
        btnEnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnAddActionPerformed(evt);
            }
        });

        btnEnCancel.setText("Cancel");
        btnEnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEnVnLayout = new javax.swing.GroupLayout(panelEnVn);
        panelEnVn.setLayout(panelEnVnLayout);
        panelEnVnLayout.setHorizontalGroup(
            panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEnVnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnVnLayout.createSequentialGroup()
                        .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEnMeaning, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(txtEnWord)))
                    .addGroup(panelEnVnLayout.createSequentialGroup()
                        .addComponent(btnEnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelEnVnLayout.setVerticalGroup(
            panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEnVnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEnWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEnMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEnVnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnAdd)
                    .addComponent(btnEnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSaveToFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSaveToFile.setText("Save to file");
        btnSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveToFileActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Search volcabulary");

        lblTime.setForeground(new java.awt.Color(255, 51, 51));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(txtSearch)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbVn)
                                .addGap(18, 18, 18)
                                .addComponent(rdbEn))
                            .addComponent(panelVnEn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelEnVn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveToFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176)
                        .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbVn)
                            .addComponent(rdbEn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelVnEn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelEnVn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveToFile, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbVnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbVnActionPerformed
        tblModel = (DefaultTableModel) tbl.getModel();
        tblModel.setDataVector(dataVn, headerVn);
        lblTitle.setText("Vietnamese - English");
    }//GEN-LAST:event_rdbVnActionPerformed

    private void rdbEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEnActionPerformed
        tblModel = (DefaultTableModel) tbl.getModel();
        tblModel.setDataVector(dataEn, headerEn);
        lblTitle.setText("English - Vietnamese");
    }//GEN-LAST:event_rdbEnActionPerformed

    private void btnVnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVnAddActionPerformed
        String word = txtVnWord.getText().trim();
        String meaning = txtVnMeaning.getText().trim();
        if (!validDataVn()) {
            return;
        }
        try {
            Volcabulary vol_VnEn = new Volcabulary(word);
            if (meaning.contains(",")) {
                StringTokenizer stk = new StringTokenizer(meaning, ",");
                String mean;
                while (stk.hasMoreTokens()) {
                    mean = stk.nextToken();
                    //add meaning of volcabulary
                    vol_VnEn.addMeaning(mean);
                    //add words to En node
                    Volcabulary vol_EnVn = new Volcabulary(mean);
                    vol_EnVn.addMeaning(word);
                    nodeEn.addNewVolcabulary(vol_EnVn);
                }
            } else {
                vol_VnEn.addMeaning(meaning);
                //add words to En node
                Volcabulary vol_EnVn = new Volcabulary(meaning);
                vol_EnVn.addMeaning(word);
                nodeEn.addNewVolcabulary(vol_EnVn);
            }
            //Add to Vn node
            nodeVn.addNewVolcabulary(vol_VnEn);
            //update UI
            addNodeToVector(dataVn, nodeVn);
            addNodeToVector(dataEn, nodeEn);
            JOptionPane.showMessageDialog(null, "Added new word is successful.");
            tbl.updateUI();
            btnVnCancelActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot add new word.");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnVnAddActionPerformed

    private void btnVnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVnCancelActionPerformed
        txtVnMeaning.setText("");
        txtVnWord.setText("");
        txtVnWord.requestFocus();
    }//GEN-LAST:event_btnVnCancelActionPerformed

    private void btnEnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnAddActionPerformed
        String word = txtEnWord.getText().trim();
        String meaning = txtEnMeaning.getText().trim();
        if (!validDataEn()) {
            return;
        }
        try {
            Volcabulary vol_En = new Volcabulary(word);
            if (meaning.contains(",")) {
                StringTokenizer stk = new StringTokenizer(meaning, ",");
                String mean;
                while (stk.hasMoreTokens()) {
                    mean = stk.nextToken();
                    //add meaning of volcabulary
                    vol_En.addMeaning(mean);
                    //add words to Vn node
                    Volcabulary vol_Vn = new Volcabulary(mean);
                    vol_Vn.addMeaning(word);
                    nodeVn.addNewVolcabulary(vol_Vn);
                }
            } else {
                vol_En.addMeaning(meaning);
                //add words to Vn node
                Volcabulary vol_Vn = new Volcabulary(meaning);
                vol_Vn.addMeaning(word);
                nodeVn.addNewVolcabulary(vol_Vn);
            }
            //add to En node
            nodeEn.addNewVolcabulary(vol_En);
            //update UI
            addNodeToVector(dataVn, nodeVn);
            addNodeToVector(dataEn, nodeEn);
            JOptionPane.showMessageDialog(null, "Added new word is successful.");
            tbl.updateUI();
            btnEnCancelActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot add new word.");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnEnAddActionPerformed

    private void txtEnWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnWordActionPerformed

    private void btnEnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnCancelActionPerformed
        txtEnMeaning.setText("");
        txtEnWord.setText("");
        txtEnWord.requestFocus();
    }//GEN-LAST:event_btnEnCancelActionPerformed

    private void btnSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveToFileActionPerformed
        File f1 = new File(fileVn);
        File f2 = new File(fileEn);

        try {
            //check if file is not exist, create file
            f1.createNewFile();
            f2.createNewFile();
            //delete all content of file
            PrintWriter pw1 = new PrintWriter(f1);
            PrintWriter pw2 = new PrintWriter(f2);
            pw1.print("");
            pw2.print("");
            pw1.close();
            pw2.close();
            //write to file
            writeFile(f1, nodeVn);
            writeFile(f2, nodeEn);
            String time = new Date(System.currentTimeMillis()).toString();
            lblTime.setText("Last saved: " + time);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot save file.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveToFileActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String s = txtSearch.getText().trim();
        if (s.isEmpty()) {
            if (rdbVn.isSelected()) {
                rdbVnActionPerformed(null);
            } else {
                rdbEnActionPerformed(null);
            }
        } else {
            dataSeach = new Vector();
            if (rdbVn.isSelected()) {
                //add to vector data search
                searchAndAddToVector(nodeVn, s);
                //updateUI
                tblModel = (DefaultTableModel) tbl.getModel();
                tblModel.setDataVector(dataSeach, headerVn);
            } else {
                //add to vector data search
                searchAndAddToVector(nodeEn, s);
                //updateUI
                tblModel = (DefaultTableModel) tbl.getModel();
                tblModel.setDataVector(dataSeach, headerEn);
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased
    private void searchAndAddToVector(Node node, String s) {
        dataSeach.clear();
        search(node.getRoot(), s);
    }

    private void search(Volcabulary vol, String s) {
        if (vol == null) {
            return;
        }

        search(vol.getLeft(), s);
        if (checkEqual(s, vol.getName())) {
            addVolcabularyToVectorData(vol, dataSeach);
        }
        search(vol.getRight(), s);
    }

    private boolean checkEqual(String a, String b) {
        if (a.isEmpty() || b.isEmpty()) {
            return false;
        }

        for (int i = 0; i < a.length(); i++) {
            if (a.charAt(i) != b.charAt(i)) {
                return false;
            }
        }
        return true;
    }

    //write file
    public void writeFile(File file, Node node) {
        writeFileInorder(node.getRoot(), file);
    }

    private void writeFileInorder(Volcabulary vol, File file) {
        if (vol == null) {
            return;
        }

        writeFileInorder(vol.getLeft(), file);

        writeFile(vol, file);

        writeFileInorder(vol.getRight(), file);
    }

    private void writeFile(Volcabulary vol, File file) {
        try {
            FileWriter fw = new FileWriter(file, true);
            fw.write(vol.getName() + " : " + vol.getMeaningToString() + "\n");
            fw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //check valid data
    private boolean validDataVn() {
        String word = txtVnWord.getText().trim();
        String meaning = txtVnMeaning.getText().trim();
        if (word.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Word is required.");
            return false;
        }

        if (meaning.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Meaning is required");
            return false;
        }

        if (!word.matches("^[a-zA-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶ"
                + "ẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợ"
                + "ụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s]+$")) {
            JOptionPane.showMessageDialog(null, "Word must be vietnamese and no special characters");
            return false;
        }

        if (!meaning.matches("\\w+(,[\\s]?\\w+)*")) {
            JOptionPane.showMessageDialog(null, "Meaning must be english and separated by comma.");
            return false;
        }
        return true;
    }

    private boolean validDataEn() {
        String word = txtEnWord.getText().trim();
        String meaning = txtEnMeaning.getText().trim();
        if (word.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Word is required.");
            return false;
        }

        if (meaning.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Meaning is required");
            return false;
        }

        String pattent = "[a-zA-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶ"
                + "ẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợ"
                + "ụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s]";

        if (!meaning.matches("^" + pattent + "+(," + pattent + "+)*+$")) {
            JOptionPane.showMessageDialog(null, "Meaning must be vietnamese and separated by comma.");
            return false;
        }

        if (!word.matches("\\w+")) {
            JOptionPane.showMessageDialog(null, "Word must be english and no special characters");
            return false;
        }
        return true;
    }

    // Add word to vector
    public void addNodeToVector(Vector data, Node node) {
        data.clear();
        addInoder(node.getRoot(), data);
    }

    private void addInoder(Volcabulary vol, Vector data) {
        if (vol == null) {
            return;
        }

        addInoder(vol.getLeft(), data);

        addVolcabularyToVectorData(vol, data);

        addInoder(vol.getRight(), data);
    }

    private void addVolcabularyToVectorData(Volcabulary vol, Vector data) {
        Vector<String> v = new Vector<>();
        v.add(vol.getName());
        v.add(vol.getMeaningToString());
        data.add(v);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TranslationApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TranslationApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TranslationApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TranslationApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TranslationApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnAdd;
    private javax.swing.JButton btnEnCancel;
    private javax.swing.JButton btnSaveToFile;
    private javax.swing.JButton btnVnAdd;
    private javax.swing.JButton btnVnCancel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panelEnVn;
    private javax.swing.JPanel panelVnEn;
    private javax.swing.JRadioButton rdbEn;
    private javax.swing.JRadioButton rdbVn;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtEnMeaning;
    private javax.swing.JTextField txtEnWord;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtVnMeaning;
    private javax.swing.JTextField txtVnWord;
    // End of variables declaration//GEN-END:variables
}
